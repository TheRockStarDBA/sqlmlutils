% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/storedProcedure.R
\name{createSprocFromFunction}
\alias{createSprocFromFunction}
\alias{createSprocFromScript}
\title{Create a Stored Procedure}
\usage{
createSprocFromFunction(connectionString, name, func, inputParams = NULL,
  outputParams = NULL, getScript = FALSE)

createSprocFromScript(connectionString, name, script, inputParams = NULL,
  outputParams = NULL, getScript = FALSE)
}
\arguments{
\item{connectionString}{character string. The connectionString to the database}

\item{name}{character string. The name of the stored procedure}

\item{func}{closure. The function to wrap in the stored procedure}

\item{inputParams}{named list. The types of the inputs,
where the names are the arguments and the values are the types}

\item{outputParams}{named list. The types of the outputs,
where the names are the arguments and the values are the types}

\item{getScript}{boolean. Return the tsql script that would be run on the server instead of running it}

\item{script}{character string. The path to the script to wrap in the stored procedure}
}
\value{
Invisibly returns the script used to create the stored procedure
}
\description{
This function creates a stored procedure from a function
on the database and return the object.
}
\section{Functions}{
\itemize{
\item \code{createSprocFromFunction}: Create stored procedure from function

\item \code{createSprocFromScript}: Create stored procedure from script file, returns output of final line
}}

\section{Warning}{

You can add output parameters to the stored procedure
but you will not be able to execute the procedure from R afterwards.
Any stored procedure with output params must be executed directly in SQL.
}

\examples{
\dontrun{
connectionString <- connectionInfo()

### Using a function
dropSproc(connectionString, "fun")

func <- function(arg1) {return(data.frame(hello = arg1))}
createSprocFromFunction(connectionString, name = "fun",
                        func = func, inputParams = list(arg1="character"))

if (checkSproc(connectionString, "fun")) {
    print("Function 'fun' exists!")
    executeSproc(connectionString, "fun", arg1="WORLD")
}

### Using a script
createSprocFromScript(connectionString, name = "funScript",
                      script = "path/to/script", inputParams = list(arg1="character"))

}



}
\seealso{
{
\code{\link{dropSproc}}

\code{\link{executeSproc}}

\code{\link{checkSproc}}
}
}
